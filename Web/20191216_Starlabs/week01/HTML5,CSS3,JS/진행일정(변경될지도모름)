1. Web 기초 (HTML5, CSS3, JS)

2. React?
    리액트는 페이스북에서 제공해주는 프론트엔드 라이브러리.

    React 개요 참조링크 : https://velopert.com/3612

    리액트를 왜 사용하는가?
        사실 리액트를 사용하지 않아도 얼마든지 웹 페이지를 html, css를 이용해 만들 수 있다.
        그러나 html과 css등으로만 만들어진 웹페이지는 동적인 데이터를 UI에 뿌려주기에는 적합하지 않다.
        리액트를 이용한다면 사용자와 상호작용할 수 있는 UI를 손쉽게 만들어 줄 수 있다.

    리액트의 특징?
        - 컴포넌트
        - One Wat Data flow : 데이터 한 방향 흐름 (C 컴파일러처럼 인듯 하다)
        - Props and State
            Props(소품?) 부모 -> 자식 (데이터 전달), 최상위 부모 컴포넌트만 props 변경 가능
            : 접근 제한이 걸려있는 공유 메시지 객체?

            State 동적 데이터를 다룰 때  사용 (Ajax처럼?)

            좀 더 써봐야 알듯

        - Virtual DOM
            HTML 코드에 대한 가상공간을 만들고 변경이 되었다면 대조 후 변경 구간만 갱신
            (AJAX랑 무슨 차이??)


    React 설치
        Ubuntu 16.04 LTS에서 실습 진행

        용어정리 npm(Node Package Manage)

        1. Node.JS 설치하기

            nvm 설치
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash

            nvm install --lts (오류 발생! 스킵!)

            오류 참조링크 : https://trustyoo86.github.io/nodejs/2019/02/18/ubuntu-nvm.html

            (참조 링크로 우회)

            관련 패키지 설치
            sudo apt-get install build-essential libssl-dev

            nvm 설치 (위에서 이미 설치했으므로 생략)
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash

            bashrc를 통해 적용 (사용자 bash 쉘 업데이트)
            source ~/.bashrc

            nvm, npm 설치 확인
            nvm --version

        2. Yarn 설치하기
            설치 참조 링크 : https://zetawiki.com/wiki/%EC%9A%B0%EB%B6%84%ED%88%AC_yarn_%EC%84%A4%EC%B9%98

            yarn 설치
            sudo apt install yarn (패키지를 못 찾는 오류 발생!)

            오류 참조링크 : https://www.deok.me/entry/NodeJS-yarn-%EC%9D%84-%EC%84%A4%EC%B9%98%ED%95%98%EA%B3%A0-yarn-%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%ED%8C%A8%ED%82%A4%EC%A7%80-%EA%B4%80%EB%A6%AC%ED%95%98%EA%B8%B0

            (참조 링크로 우회)

            1. 저장소 등록하기
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -

            무언가 키값 or list 정보 추가
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list

            2. yarn 설치하기
            sudo apt-get update && sudo apt-get install yarn

            3. yarn 설치 및 버전 확인
            yarn --version (오류 발생!)

            The program 'yarn' is currently not installed. To run 'yarn' please ask your administrator to install the package 'cmdtest'

            cmdtest를 설치하라 함...

            오류 참조링크 : https://stackoverflow.com/questions/42606941/install-yarn-ubuntu-16-04-linux-mint-18-1

            (참조 링크로 우회!)

            npm 을 사용하여 yarn 설치
            npm install -g yarn

            다시 yarn 설치 및 버전 확인
            yarn --version

            정상 설치 확인


        3. create-react-app 설치 및 사용
            npm을 사용하여 설치
            npm install -g create-react-app

            ** npm 설치 오류 발생!
            참조링크 : https://askubuntu.com/questions/1088662/npm-depends-node-gyp-0-10-9-but-it-is-not-going-to-be-installed
            sudo apt-get install nodejs-dev node-gyp libssl1.0-dev
            sudo apt-get install npm
            ** npm 설치 오류 해결!

            yarn을 사용하여 설치
            yarn global add create-react-app (시도 안 해봄! 추가 세팅이 필요함)

            사용 예시 (hello-react 이름의 애플리케이션 패키지 생성인듯)
            create-react-app hello-react

            cd hello-react (프로젝트 폴더로 들어가서)
            yarn start (프로젝트 실행, Django나 NginX 처럼 웹페이지가 팝업되야 하나 yarn build  오류 발생!!)

            yarn -> npm으로 바꾸어 실행
            npm start (같은 오류 발생!!)

            yarn으로 설치를 해보자.

            우분투의 경우 사전 path 등록이 필요함
            echo 'export PATH="$(yarn global bin):$PATH"' >> ~/.bashrc
            yarn global add test-react-app

            앱 생성
            create-react-app yarn-react


            생각해보니 외부 서버에 설치했는데 localhost:3000으로 하면 안되는게 당연하네;;;


            방화벽 설정

            *** ufw 와 iptables 둘중 하나만 사용해야 함!!!
            현재 iptables 을 사용하므로 ufw는 비활성화 해주어야 한다.
            ufw disable

            참조링크 : https://server-engineer.tistory.com/418
            iptables 초기 설정 참조링크 : https://linuxkill.tistory.com/88
            iptables 방화벽 정책 참조링크 : https://ndb796.tistory.com/262


            1. 열려있는 모든 포트 표시
            netstat -nap

            2. 확인하려는 포트번호 상태확인
            netstat -nap | grep 포트번호

            3. 특정 포트 외부접근 허용 (내부에서 외부 허용은 아님!)
            iptables -I INPUT 1 -p tcp --dport 3000 -j ACCEPT

            iptables -I OUTPUT 1 -p tcp --dport 3000 -j ACCEPT

            * 반대로 내부에서 외부 접근을 허용할 경우 INPUT -> OUTPUT

            4. 변경사항 저장
            service iptables save
            /etc/init.d/iptables restart

            iptables -I OUTPUT 1 -p tcp --dport 3000 -j ACCEPT


        
